package in.co.rays.ORSProject4.model;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import org.apache.log4j.Logger;
import in.co.rays.ORSProject4.bean.UserBean;
import in.co.rays.ORSProject4.exception.ApplicationException;
import in.co.rays.ORSProject4.exception.DatabaseException;
import in.co.rays.ORSProject4.util.JDBCDataSource;

public class UserModel {
	 private static Logger log = Logger.getLogger(UserModel.class);
	 private long roleId;
	public long getRoleId() {
		return roleId;
	}
	public void setRoleId(long roleId) {
		this.roleId = roleId;
	}
	public int nextPK() throws DatabaseException {
		log.debug("Model nextpk started");
		int pk=0;
		Connection conn=null;
		try{
			conn=JDBCDataSource.getConnection();
			PreparedStatement pstmt=conn.prepareStatement("select max(ID) from ST_USER");
			ResultSet rs=pstmt.executeQuery();
			while(rs.next()){
				pk=rs.getInt(1);
			}
			rs.close();
		}catch(Exception e){
			log.error("Database Exception.....", e);
			e.printStackTrace();
		}finally{
			JDBCDataSource.closeConnection(conn);
		}
		return pk=pk+1;
	}
	public void add(UserBean bean) throws Exception{
		 log.debug("Model add Started");
		 int pk = 0;
		 Connection conn = null;
		 
		 try {
		conn = JDBCDataSource.getConnection();	 
		conn.setAutoCommit(false);
		java.sql.PreparedStatement pstmt =  conn.prepareStatement("insert into st_user values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
	    pstmt.setInt(1, (int)bean.getId());
	    pstmt.setString(2, bean.getFirstName());
        pstmt.setString(3, bean.getLastName());
        pstmt.setString(4, bean.getLogin());
        pstmt.setString(5, bean.getPassword());
        pstmt.setDate(6, new java.sql.Date(bean.getDob().getTime()));
        pstmt.setString(7, bean.getMobileNo());
        pstmt.setLong(8, bean.getRoleId());
        pstmt.setInt(9, bean.getUnSuccessfulLogin());
        pstmt.setString(10, bean.getGender());
        pstmt.setTimestamp(11, bean.getLastLogin());
        pstmt.setString(12, bean.getLock());
        pstmt.setString(13, bean.getRegisteredIP());
        pstmt.setString(14, bean.getLastLoginIP());
        pstmt.setString(15, bean.getCreatedBy());
        pstmt.setString(16, bean.getModifiedBy());
        pstmt.setTimestamp(17, bean.getCreatedDatetime());
        pstmt.setTimestamp(18, bean.getModifiedDatetime());
        pstmt.executeUpdate();
        conn.commit(); 
        pstmt.close();
		 } catch (Exception e) {
	            log.error("Database Exception..", e);
	            try {
	                conn.rollback();
	            } catch (Exception ex) {
	                ex.printStackTrace();
	                throw new ApplicationException(
	                        "Exception : add rollback exception " + ex.getMessage());
	            }
	            throw new ApplicationException("Exception : Exception in add User");}
		 }
		 public void delete(UserBean bean) throws ApplicationException,Exception{
			 log.debug("Model delete Started");
			 Connection conn=null;
			 try{
				// ResourceBundle rb = ResourceBundle.getBundle("in.co.rays.ORSProject4.bundle.Register");
				//	Class.forName(rb.getString("Driver"));
				  //  conn = DriverManager.getConnection(rb.getString("URL"), rb.getString("user"),rb.getString("password"));
				 conn = JDBCDataSource.getConnection();
				    conn.setAutoCommit(false);
				   PreparedStatement pstmt =conn.prepareStatement("DELETE FROM ST_USER WHERE ID=?");
				    pstmt.setLong(1, bean.getId());
				    pstmt.executeUpdate();
				    conn.commit();
				    pstmt.close();
			 }catch (Exception e) {
		            log.error("Database Exception..", e);
		            try {
		                conn.rollback();
		            } catch (Exception ex) {
		                throw new ApplicationException(
		                        "Exception : Delete rollback exception "+ ex.getMessage());
		            }
		            throw new ApplicationException(
		                    "Exception : Exception in delete User");
		        } finally {
		            JDBCDataSource.closeConnection(conn);
		        }
		 }
		 public void update(UserBean bean){
			 log.debug("Model update Started");
			 Connection conn=null;
			 try{
				 conn=JDBCDataSource.getConnection();
				 conn.setAutoCommit(false);
				PreparedStatement pstmt=conn.prepareStatement("UPDATE ST_USER SET FIRST_NAME=?,LAST_NAME=?,LOGIN=?,PASSWORD=?,DOB=?,MOBILE_NO=?,ROLE_ID=?,UNSUCCESSFUL_LOGIN=?,GENDER=?,LAST_LOGIN=?,USER_LOCK=?,REGISTERED_IP=?,LAST_LOGIN_IP=?,CREATED_BY=?,MODIFIED_BY=?,CREATED_DATETIME=?,MODIFIED_DATETIME=? WHERE ID=?");
				 pstmt.setString(1, bean.getFirstName());
				 pstmt.setString(2, bean.getLastName());
				 pstmt.setString(3, bean.getLogin());
				 pstmt.setString(4, bean.getPassword());
				 pstmt.setString(5, new java.sql.Date(bean.getDob().getTime()));
				 pstmt.setString(6, bean.getMobileNo());
		         pstmt.setLong(7, bean.getRoleId());
		         pstmt.setInt(8, bean.getUnSuccessfulLogin());
		         pstmt.setString(9, bean.getGender());
		         pstmt.setTimestamp(10, bean.getLastLogin());
		         pstmt.setString(11, bean.getLock());
		         pstmt.setString(12, bean.getRegisteredIP());
		         pstmt.setString(13, bean.getLastLoginIP());
		         pstmt.setString(14, bean.getCreatedBy());
		         pstmt.setString(15, bean.getModifiedBy());
		         pstmt.setTimestamp(16, bean.getCreatedDatetime());
		         pstmt.setTimestamp(17, bean.getModifiedDatetime());
		         pstmt.setLong(18, bean.getId());
		         pstmt.executeUpdate();
		         conn.commit(); // End transaction
		         pstmt.close();
		        } catch (Exception e) {
		            e.printStackTrace();
		            log.error("Database Exception..", e);
		            try {
		                conn.rollback();
		            } catch (Exception ex) {
		                throw new ApplicationException(
		                        "Exception : Delete rollback exception "
		                                + ex.getMessage());
		            }
		            throw new ApplicationException("Exception in updating User ");
		        } finally {
		            JDBCDataSource.closeConnection(conn);
		        }
		        log.debug("Model update End");
				 
			 }
		 }
		 

